{"name": "Тест нажатия кнопки поиска и проверки результатов", "status": "failed", "statusDetails": {"message": "Failed: Не удалось выполнить двойной клик по кнопке: Message: Кнопка поиска не доступна для клика", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"944ad4ea960c13cf2ae85969af6a4168\")>\n\n    @allure.feature(\"Нажатие кнопки и проверка перехода\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title(\"Тест нажатия кнопки поиска и проверки результатов\")\n    @allure.description(\"Выполняем двойной клик по кнопке поиска и проверяем переход на страницу результатов\")\n    @pytest.mark.dependency(name=\"click_button_and_check_results\", depends=[\"set_city_from\", \"set_city_to\"])\n    def test_click_button_and_check_results(driver):\n        page = MainPage(driver)\n        with allure.step(\"Выполняем двойной клик по кнопке поиска\"):\n            try:\n>               page.double_click_search_button()\n\ntest_search.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <ui_fun_and_sun.MainPage object at 0x0000024980302780>\n\n    def double_click_search_button(self) -> None:\n        \"\"\"\n        Выполнить двойной клик по кнопке поиска.\n    \n        :return: None\n        \"\"\"\n        button = self.wait_for_element_clickable(self.SEARCH_BUTTON)\n        if not button:\n>           raise TimeoutException(\"Кнопка поиска не доступна для клика\")\nE           selenium.common.exceptions.TimeoutException: Message: Кнопка поиска не доступна для клика\n\nui_fun_and_sun.py:137: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"944ad4ea960c13cf2ae85969af6a4168\")>\n\n    @allure.feature(\"Нажатие кнопки и проверка перехода\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title(\"Тест нажатия кнопки поиска и проверки результатов\")\n    @allure.description(\"Выполняем двойной клик по кнопке поиска и проверяем переход на страницу результатов\")\n    @pytest.mark.dependency(name=\"click_button_and_check_results\", depends=[\"set_city_from\", \"set_city_to\"])\n    def test_click_button_and_check_results(driver):\n        page = MainPage(driver)\n        with allure.step(\"Выполняем двойной клик по кнопке поиска\"):\n            try:\n                page.double_click_search_button()\n            except TimeoutException as e:\n>               pytest.fail(f\"Не удалось выполнить двойной клик по кнопке: {e}\")\nE               Failed: Не удалось выполнить двойной клик по кнопке: Message: Кнопка поиска не доступна для клика\n\ntest_search.py:73: Failed"}, "description": "Выполняем двойной клик по кнопке поиска и проверяем переход на страницу результатов", "steps": [{"name": "Выполняем двойной клик по кнопке поиска", "status": "failed", "statusDetails": {"message": "Failed: Не удалось выполнить двойной клик по кнопке: Message: Кнопка поиска не доступна для клика\n\n", "trace": "  File \"C:\\Users\\admin\\Desktop\\fs\\fstravel_tests\\test_search.py\", line 73, in test_click_button_and_check_results\n    pytest.fail(f\"Не удалось выполнить двойной клик по кнопке: {e}\")\n    ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\admin\\Desktop\\fs\\fstravel_tests\\.venv\\Lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "start": 1748281584246, "stop": 1748281604345}], "start": 1748281584246, "stop": 1748281604347, "uuid": "25b1ba3e-98bf-4c5d-a7e0-7e19d454ae81", "historyId": "681b6219890b44259324f3b09eac3699", "testCaseId": "681b6219890b44259324f3b09eac3699", "fullName": "test_search#test_click_button_and_check_results", "labels": [{"name": "feature", "value": "Нажатие кнопки и проверка перехода"}, {"name": "severity", "value": "critical"}, {"name": "tag", "value": "dependency(name='click_button_and_check_results', depends=['set_city_from', 'set_city_to'])"}, {"name": "suite", "value": "test_search"}, {"name": "host", "value": "DESKTOP-4F3BQLH"}, {"name": "thread", "value": "14740-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_search"}]}