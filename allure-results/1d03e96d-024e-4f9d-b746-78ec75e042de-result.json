{"name": "test_close_popup", "status": "failed", "statusDetails": {"message": "Failed: Форма popmechanic не закрылась после клика по кнопке", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0ab324ddb5cfe545865bfd6f14ef1c52\")>\n\n    @allure.feature(\"Закрытие popup\")\n    @pytest.mark.dependency(name=\"close_popup\", depends=[\"open_site\"])\n    def test_close_popup(driver):\n        with allure.step(\"Попытка закрыть форму popmechanic, если она появилась\"):\n            try:\n>               close_button = WebDriverWait(driver, 5).until(\n                    EC.element_to_be_clickable((By.CSS_SELECTOR, \"#popmechanic-form-86751 > div.popmechanic-close\"))\n                )\n\ntest_01.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0ab324ddb5cfe545865bfd6f14ef1c52\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x0000026ED4888FE0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x002FFC03+61635]\nE       \tGetHandleVerifier [0x002FFC44+61700]\nE       \t(No symbol) [0x001205D3]\nE       \t(No symbol) [0x0016899E]\nE       \t(No symbol) [0x00168D3B]\nE       \t(No symbol) [0x001B0E12]\nE       \t(No symbol) [0x0018D2E4]\nE       \t(No symbol) [0x001AE61B]\nE       \t(No symbol) [0x0018D096]\nE       \t(No symbol) [0x0015C840]\nE       \t(No symbol) [0x0015D6A4]\nE       \tGetHandleVerifier [0x00584523+2701795]\nE       \tGetHandleVerifier [0x0057FCA6+2683238]\nE       \tGetHandleVerifier [0x0059A9EE+2793134]\nE       \tGetHandleVerifier [0x003168C5+155013]\nE       \tGetHandleVerifier [0x0031CFAD+181357]\nE       \tGetHandleVerifier [0x00307458+92440]\nE       \tGetHandleVerifier [0x00307600+92864]\nE       \tGetHandleVerifier [0x002F1FF0+5296]\nE       \tBaseThreadInitThunk [0x7542FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x773C82AE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x773C827E+238]\nE       \t(No symbol) [0x00000000]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0ab324ddb5cfe545865bfd6f14ef1c52\")>\n\n    @allure.feature(\"Закрытие popup\")\n    @pytest.mark.dependency(name=\"close_popup\", depends=[\"open_site\"])\n    def test_close_popup(driver):\n        with allure.step(\"Попытка закрыть форму popmechanic, если она появилась\"):\n            try:\n                close_button = WebDriverWait(driver, 5).until(\n                    EC.element_to_be_clickable((By.CSS_SELECTOR, \"#popmechanic-form-86751 > div.popmechanic-close\"))\n                )\n                close_button.click()\n                # Ждём, что форма исчезнет со страницы\n                WebDriverWait(driver, 5).until(\n                    EC.invisibility_of_element_located((By.CSS_SELECTOR, \"#popmechanic-form-86751\"))\n                )\n                allure.attach(\"Форма успешно закрыта\", name=\"Статус\", attachment_type=allure.attachment_type.TEXT)\n            except TimeoutException:\n>               pytest.fail(\"Форма popmechanic не закрылась после клика по кнопке\")\nE               Failed: Форма popmechanic не закрылась после клика по кнопке\n\ntest_01.py:46: Failed"}, "steps": [{"name": "Попытка закрыть форму popmechanic, если она появилась", "status": "failed", "statusDetails": {"message": "Failed: Форма popmechanic не закрылась после клика по кнопке\n", "trace": "  File \"c:\\Users\\admin\\Desktop\\fs\\fstravel_tests\\test_01.py\", line 46, in test_close_popup\n    pytest.fail(\"Форма popmechanic не закрылась после клика по кнопке\")\n    ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\admin\\Desktop\\fs\\fstravel_tests\\.venv\\Lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "start": 1748277033834, "stop": 1748277039070}], "start": 1748277033834, "stop": 1748277039074, "uuid": "4903e114-7d4d-465b-9b61-33eaf5f59f03", "historyId": "536d7be0d33087842c2645e8b351277e", "testCaseId": "536d7be0d33087842c2645e8b351277e", "fullName": "test_01#test_close_popup", "labels": [{"name": "feature", "value": "Закрытие popup"}, {"name": "tag", "value": "dependency(name='close_popup', depends=['open_site'])"}, {"name": "suite", "value": "test_01"}, {"name": "host", "value": "DESKTOP-4F3BQLH"}, {"name": "thread", "value": "2116-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_01"}]}