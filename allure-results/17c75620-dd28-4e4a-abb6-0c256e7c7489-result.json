{"name": "test_click_button_and_check_results", "status": "failed", "statusDetails": {"message": "Failed: Не удалось нажать на кнопку: Message: \nStacktrace:\n\tGetHandleVerifier [0x007EFC03+61635]\n\tGetHandleVerifier [0x007EFC44+61700]\n\t(No symbol) [0x006105D3]\n\t(No symbol) [0x0065899E]\n\t(No symbol) [0x00658D3B]\n\t(No symbol) [0x006A0E12]\n\t(No symbol) [0x0067D2E4]\n\t(No symbol) [0x0069E61B]\n\t(No symbol) [0x0067D096]\n\t(No symbol) [0x0064C840]\n\t(No symbol) [0x0064D6A4]\n\tGetHandleVerifier [0x00A74523+2701795]\n\tGetHandleVerifier [0x00A6FCA6+2683238]\n\tGetHandleVerifier [0x00A8A9EE+2793134]\n\tGetHandleVerifier [0x008068C5+155013]\n\tGetHandleVerifier [0x0080CFAD+181357]\n\tGetHandleVerifier [0x007F7458+92440]\n\tGetHandleVerifier [0x007F7600+92864]\n\tGetHandleVerifier [0x007E1FF0+5296]\n\tBaseThreadInitThunk [0x7542FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x773C82AE+286]\n\tRtlGetAppContainerNamedObjectPath [0x773C827E+238]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"aa7f3855354f85e51141acd5fc59062d\")>\n\n    @allure.feature(\"Нажатие кнопки и проверка перехода\")\n    @pytest.mark.dependency(name=\"click_button_and_check_results\")\n    def test_click_button_and_check_results(driver):\n        button_selector = \"#app > div > div.v-main > div.position-sticky > div > div > button\"\n        results_selector = \"#app > div > div.v-main > div.container > div > div > div.search-content\" # Замените на реальный селектор элемента страницы с результатами\n        expected_url_part = \"https://fstravel.com/searchtour/\"              # Замените на часть URL, которая появляется после перехода\n    \n        with allure.step(\"Ожидание кликабельности кнопки и нажатие на неё\"):\n            try:\n>               button = WebDriverWait(driver, 10).until(\n                    EC.element_to_be_clickable((By.CSS_SELECTOR, button_selector))\n                )\n\ntest_01.py:91: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"aa7f3855354f85e51141acd5fc59062d\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x00000202F72F8180>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x007EFC03+61635]\nE       \tGetHandleVerifier [0x007EFC44+61700]\nE       \t(No symbol) [0x006105D3]\nE       \t(No symbol) [0x0065899E]\nE       \t(No symbol) [0x00658D3B]\nE       \t(No symbol) [0x006A0E12]\nE       \t(No symbol) [0x0067D2E4]\nE       \t(No symbol) [0x0069E61B]\nE       \t(No symbol) [0x0067D096]\nE       \t(No symbol) [0x0064C840]\nE       \t(No symbol) [0x0064D6A4]\nE       \tGetHandleVerifier [0x00A74523+2701795]\nE       \tGetHandleVerifier [0x00A6FCA6+2683238]\nE       \tGetHandleVerifier [0x00A8A9EE+2793134]\nE       \tGetHandleVerifier [0x008068C5+155013]\nE       \tGetHandleVerifier [0x0080CFAD+181357]\nE       \tGetHandleVerifier [0x007F7458+92440]\nE       \tGetHandleVerifier [0x007F7600+92864]\nE       \tGetHandleVerifier [0x007E1FF0+5296]\nE       \tBaseThreadInitThunk [0x7542FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x773C82AE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x773C827E+238]\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"aa7f3855354f85e51141acd5fc59062d\")>\n\n    @allure.feature(\"Нажатие кнопки и проверка перехода\")\n    @pytest.mark.dependency(name=\"click_button_and_check_results\")\n    def test_click_button_and_check_results(driver):\n        button_selector = \"#app > div > div.v-main > div.position-sticky > div > div > button\"\n        results_selector = \"#app > div > div.v-main > div.container > div > div > div.search-content\" # Замените на реальный селектор элемента страницы с результатами\n        expected_url_part = \"https://fstravel.com/searchtour/\"              # Замените на часть URL, которая появляется после перехода\n    \n        with allure.step(\"Ожидание кликабельности кнопки и нажатие на неё\"):\n            try:\n                button = WebDriverWait(driver, 10).until(\n                    EC.element_to_be_clickable((By.CSS_SELECTOR, button_selector))\n                )\n                button.click()\n            except Exception as e:\n>               pytest.fail(f\"Не удалось нажать на кнопку: {e}\")\nE               Failed: Не удалось нажать на кнопку: Message: \nE               Stacktrace:\nE               \tGetHandleVerifier [0x007EFC03+61635]\nE               \tGetHandleVerifier [0x007EFC44+61700]\nE               \t(No symbol) [0x006105D3]\nE               \t(No symbol) [0x0065899E]\nE               \t(No symbol) [0x00658D3B]\nE               \t(No symbol) [0x006A0E12]\nE               \t(No symbol) [0x0067D2E4]\nE               \t(No symbol) [0x0069E61B]\nE               \t(No symbol) [0x0067D096]\nE               \t(No symbol) [0x0064C840]\nE               \t(No symbol) [0x0064D6A4]\nE               \tGetHandleVerifier [0x00A74523+2701795]\nE               \tGetHandleVerifier [0x00A6FCA6+2683238]\nE               \tGetHandleVerifier [0x00A8A9EE+2793134]\nE               \tGetHandleVerifier [0x008068C5+155013]\nE               \tGetHandleVerifier [0x0080CFAD+181357]\nE               \tGetHandleVerifier [0x007F7458+92440]\nE               \tGetHandleVerifier [0x007F7600+92864]\nE               \tGetHandleVerifier [0x007E1FF0+5296]\nE               \tBaseThreadInitThunk [0x7542FCC9+25]\nE               \tRtlGetAppContainerNamedObjectPath [0x773C82AE+286]\nE               \tRtlGetAppContainerNamedObjectPath [0x773C827E+238]\n\ntest_01.py:96: Failed"}, "steps": [{"name": "Ожидание кликабельности кнопки и нажатие на неё", "status": "failed", "statusDetails": {"message": "Failed: Не удалось нажать на кнопку: Message: \nStacktrace:\n\tGetHandleVerifier [0x007EFC03+61635]\n\tGetHandleVerifier [0x007EFC44+61700]\n\t(No symbol) [0x006105D3]\n\t(No symbol) [0x0065899E]\n\t(No symbol) [0x00658D3B]\n\t(No symbol) [0x006A0E12]\n\t(No symbol) [0x0067D2E4]\n\t(No symbol) [0x0069E61B]\n\t(No symbol) [0x0067D096]\n\t(No symbol) [0x0064C840]\n\t(No symbol) [0x0064D6A4]\n\tGetHandleVerifier [0x00A74523+2701795]\n\tGetHandleVerifier [0x00A6FCA6+2683238]\n\tGetHandleVerifier [0x00A8A9EE+2793134]\n\tGetHandleVerifier [0x008068C5+155013]\n\tGetHandleVerifier [0x0080CFAD+181357]\n\tGetHandleVerifier [0x007F7458+92440]\n\tGetHandleVerifier [0x007F7600+92864]\n\tGetHandleVerifier [0x007E1FF0+5296]\n\tBaseThreadInitThunk [0x7542FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x773C82AE+286]\n\tRtlGetAppContainerNamedObjectPath [0x773C827E+238]\n\n", "trace": "  File \"C:\\Users\\admin\\Desktop\\fs\\fstravel_tests\\test_01.py\", line 96, in test_click_button_and_check_results\n    pytest.fail(f\"Не удалось нажать на кнопку: {e}\")\n    ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\admin\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "start": 1748193254496, "stop": 1748193264787}], "start": 1748193254496, "stop": 1748193264789, "uuid": "6bf38864-5a4b-4698-82d6-07107d5ecf62", "historyId": "a0d0aebc6ccedafb4fe6e79695fb22e4", "testCaseId": "a0d0aebc6ccedafb4fe6e79695fb22e4", "fullName": "test_01#test_click_button_and_check_results", "labels": [{"name": "feature", "value": "Нажатие кнопки и проверка перехода"}, {"name": "tag", "value": "dependency(name='click_button_and_check_results')"}, {"name": "suite", "value": "test_01"}, {"name": "host", "value": "DESKTOP-4F3BQLH"}, {"name": "thread", "value": "8404-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_01"}]}